//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PhanMemQuanLyGaraOto.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class GARAOTOEntities : DbContext
    {
        public GARAOTOEntities()
            : base("name=GARAOTOEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ACCOUNT> ACCOUNTs { get; set; }
        public virtual DbSet<BAOCAO> BAOCAOs { get; set; }
        public virtual DbSet<BAOCAOTON> BAOCAOTONs { get; set; }
        public virtual DbSet<CHITIET_PSC> CHITIET_PSC { get; set; }
        public virtual DbSet<CHUXE> CHUXEs { get; set; }
        public virtual DbSet<CT_BCDS> CT_BCDS { get; set; }
        public virtual DbSet<CT_PHIEUNHAP> CT_PHIEUNHAP { get; set; }
        public virtual DbSet<HIEUXE> HIEUXEs { get; set; }
        public virtual DbSet<PHIEUNHAP> PHIEUNHAPs { get; set; }
        public virtual DbSet<PHIEUSUACHUA> PHIEUSUACHUAs { get; set; }
        public virtual DbSet<PHIEUTHUTIEN> PHIEUTHUTIENs { get; set; }
        public virtual DbSet<PHUTUNG> PHUTUNGs { get; set; }
        public virtual DbSet<THAMSO> THAMSOes { get; set; }
        public virtual DbSet<THANGNAM> THANGNAMs { get; set; }
        public virtual DbSet<TIENCONG> TIENCONGs { get; set; }
        public virtual DbSet<XE> XEs { get; set; }
    
        public virtual int DONGPHIEUSUACHUA(Nullable<int> mAPHIEU)
        {
            var mAPHIEUParameter = mAPHIEU.HasValue ?
                new ObjectParameter("MAPHIEU", mAPHIEU) :
                new ObjectParameter("MAPHIEU", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DONGPHIEUSUACHUA", mAPHIEUParameter);
        }
    
        public virtual ObjectResult<GETBAOCAO_Result> GETBAOCAO(Nullable<int> tHANG, Nullable<int> nAM)
        {
            var tHANGParameter = tHANG.HasValue ?
                new ObjectParameter("THANG", tHANG) :
                new ObjectParameter("THANG", typeof(int));
    
            var nAMParameter = nAM.HasValue ?
                new ObjectParameter("NAM", nAM) :
                new ObjectParameter("NAM", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GETBAOCAO_Result>("GETBAOCAO", tHANGParameter, nAMParameter);
        }
    
        public virtual ObjectResult<GETCHITIETBAOCAO_Result> GETCHITIETBAOCAO(Nullable<int> tHANG, Nullable<int> nAM)
        {
            var tHANGParameter = tHANG.HasValue ?
                new ObjectParameter("THANG", tHANG) :
                new ObjectParameter("THANG", typeof(int));
    
            var nAMParameter = nAM.HasValue ?
                new ObjectParameter("NAM", nAM) :
                new ObjectParameter("NAM", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GETCHITIETBAOCAO_Result>("GETCHITIETBAOCAO", tHANGParameter, nAMParameter);
        }
    
        public virtual int INITBAOCAODOANHSO(Nullable<System.DateTime> tHANGNAM)
        {
            var tHANGNAMParameter = tHANGNAM.HasValue ?
                new ObjectParameter("THANGNAM", tHANGNAM) :
                new ObjectParameter("THANGNAM", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INITBAOCAODOANHSO", tHANGNAMParameter);
        }
    
        public virtual ObjectResult<LOGINACCOUNT_Result> LOGINACCOUNT(string uSERNAME, string pASSWORD)
        {
            var uSERNAMEParameter = uSERNAME != null ?
                new ObjectParameter("USERNAME", uSERNAME) :
                new ObjectParameter("USERNAME", typeof(string));
    
            var pASSWORDParameter = pASSWORD != null ?
                new ObjectParameter("PASSWORD", pASSWORD) :
                new ObjectParameter("PASSWORD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LOGINACCOUNT_Result>("LOGINACCOUNT", uSERNAMEParameter, pASSWORDParameter);
        }
    }
}
